services:
  ps_redis:
    container_name: "ps_redis"
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    expose:
      - 6379
    command: redis-server --save 60 1
    networks:
      - localnetwork
    volumes:
      - "redis-data:/data"
  ps_database:
    container_name: "ps_database"
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - localnetwork
    expose:
      - 5432
    ports:
      - "5432:5432"
    volumes:
      - ./docker-entrypoint-initdb:/docker-entrypoint-initdb.d
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  ps_backend:
    container_name: "ps_backend"
    build: .
    image: ps_backend
    networks:
      - localnetwork
    ports:
      - "8000:8000"
    command: >
      sh -c "alembic upgrade head && python main.py"
    volumes:
      - .:/srv/ps_backend
    depends_on:
      ps_database:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - db_host=ps_database
      - db_engine=postgresql
      - db_username=postgres
      - db_password=postgres
      - db_name=puppysignal
      - redis_host=ps_redis
      - redis_port=6379
    restart: "on-failure"
networks:
  localnetwork:
    driver: bridge
volumes:
  postgres-data:
  docker-entrypoint-initdb:
  redis-data:

